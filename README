sakra - swiss army knife rss aggregator

SYNOPSIS:
  sakra [-cv] [FEEDGROUP...]

DEPENDENCIES:
  curl, sfeed

-----
WHY?
-----

I use RSS for watching YouTube, listening to podcasts, and keeping up on blogs.
I could never find a single program that would handle all three of these needs
for me so I wrote one myself.

If you are someone struggling with the same issue, or someone who just wants a
simple RSS aggregator, I hope that you would find sakra useful.

-----------
QUICKSTART
-----------

1. Make a file named ~/.sakra/<feedgroup>.feeds (where <feedgroup> is some
   arbitrary name, e.g., "podcasts") and populate it with a newline-separated
   list of URLs to fetch RSS feeds from. This defines a new "feedgroup" for
   sakra to keep track of.
2. Assuming you don't want to download the entire back catalog of everything in
   the feedgroup, run the "sakra -c <feedgroup>" command (replace <feedgroup>
   with the name of the feedgroup you defined on step #1) to tell sakra to
   "catch up" on your feedgroup.
3. Later run the "sakra" command to update your feeds. It will download each new
   item (enclosure if available, falling back to curling the link) into
   $HOME/<feedgroup>/ (directory created automatically).

This process should work for both podcasts and web pages, for other uses see the
RC SCRIPTS section.

-----------
RC SCRIPTS
-----------

The handling of each item in each feed of a feedgroup may be overridden by the
user. This is done via an rc script. An rc script is simply an executable which
will be called each time a new feed item is processed. Information about the
feed item is passed to the rc script via environment variables.

The following environment variables are passed to rc scripts:
  TIMESTAMP
  TITLE
  LINK
  CONTENT
  CONTENT_TYPE
  GUID
  AUTHOR
  ENCLOSURE
  FEEDGROUP
  FEEDNAME
  SAKRAHOME
  NV
  V
  VV
  VVV

Most of these environment variables come straight from the feed item and may be
empty.

If the rc script exits with an error then sakra will skip the failed feed item
and try to re-run the rc script on the failed feed item the next time sakra is
invoked. This is usually useful for network errors or other transient errors.

SAKRAHOME is the parent directory of where the user would prefer their downloads
to be dropped into (e.g., $SAKRAHOME/news for news).

FEEDNAME is the optional name of the feed added by the user after the URL in the
feeds file.

The V environment variable is the verbosity level set by occurrences of the -v
flag. The VV, VVV, and NV variables are based on the value of V, they're meant
convenience in parameter expansions (e.g., curl ${VVV:+-v} ...). NV corresponds
to no -v flags, V corresponds to 1 or more, VV corresponds to 2 or more, VVV
corresponds to 3 or more.

Example rc scripts can be found in the "examplerc" directory of this
repository.

--------------------
OTHER CONFIGURATION
--------------------

After each URL an optional FEEDNAME may be included, which will override the
AUTHOR in the filename if the rc script supports it.

The SAKRADIR environment variable may be used to change the default location of
sakra's configuration directory, usually ~/.sakra

The SAKRAHOME environment variable may be used to ask sakra (and sakra's rc
scripts) to drop your downloads into an alternative parent directory, instead of
your HOME.

---------
SEE ALSO
---------

castget https://github.com/mlj/castget
greg https://github.com/manolomartinez/greg

