#!/bin/sh -e
# shellcheck disable=SC1003

help() { echo 'sakra [-cv] [FEEDGROUP...]' >&2 ; }

export SAKRAHOME="${SAKRAHOME:-${HOME:?}}"
case "$SAKRAHOME" in -*) exit 1 ;; esac

SAKRADIR="${SAKRADIR:-${SAKRAHOME:?}/.sakra}"
case "$SAKRADIR" in -*) exit 1 ;; esac

mkdir -p "$SAKRADIR" "$SAKRAHOME"
cd "$SAKRADIR"

mkdir lock
trap 'trap - EXIT HUP QUIT TERM INT ABRT; rmdir lock' EXIT HUP QUIT TERM INT ABRT

TAB=$(printf '\t')

unset -v catchup NV
V=0
while getopts cvh o; do
	case "$o" in
		c) catchup=1 ;;
		v) export V=$((V+1)) ;;
		h) help; exit 0 ;;
		*) help; exit 1 ;;
	esac
done
shift $((OPTIND-1))

case "$V" in
	0) export NV=1; unset -v V;;
	1) ;;
	2) export VV=1;;
	3) export VV=1 VVV=1;;
esac

# This runs in the same context as a user's rc script
defaultrc() {
	[ "$LINK" ] || [ "$ENCLOSURE" ] || exit 0
	target=${ENCLOSURE:-$LINK}

	# Add file extensions when applicable
	if [ "$ENCLOSURE" ]; then
		path=${target##*/}; path=${path%%[?#]*};
		ext=${path##*.}
	else
		ext=html
	fi

	# carefully assemble filename, substitute / for \
	name="${FEEDNAME:-$AUTHOR}"
	title="${TITLE:-${TIMESTAMP:-$(date +%c)}}"
	filename=$(tr '/' '\\') <<-EOF
		${name:+$name - }${title}${ext:+.$ext}
	EOF

	mkdir -p "$SAKRAHOME/$FEEDGROUP"
	curl -LSsf${VVV:+v} -- "$target" > "$SAKRAHOME/$FEEDGROUP/$filename"
}

handle_feed() {
	state="$1"; rc="$2";
	while IFS= read -r item; do
		if [ "$VVV" ]; then
			echo "$item" >&2
		fi

		unset -v TIMESTAMP TITLE LINK CONTENT CONTENT_TYPE GUID AUTHOR ENCLOSURE old
		for field in TIMESTAMP TITLE LINK CONTENT CONTENT_TYPE GUID AUTHOR ENCLOSURE; do
			eval export "$field="'${item%%"$TAB"*}'

			# Skip old entries (XXX: what if there isn't a GUID?)
			if [ "$field" = GUID ] && grep -Fxqe "$GUID" < "$state"; then
				old=1; break;
			fi

			case "$item" in *"$TAB"*) ;; *) break ;; esac # no more fields = we're done

			item=${item#*"$TAB"} # remove $field from $item
		done

		if [ "$old" ]; then continue; fi

		if [ "$catchup" ]; then
			printf '%s\n' "$GUID" >> "$state"
			continue
		fi

		if [ -x "$rc" ]; then
			"$rc" || continue
		elif [ -f "$rc" ]; then
			echo "$rc exists but isn't executable" >&2; return 1;
		else
			(defaultrc) || continue
		fi

		printf '%s\n' "$GUID" >> "$state" # Mark item as old
	done
}

for feeds in *.feeds; do
	if [ "$feeds" = '*.feeds' ]; then
		echo 'No feedgroups defined, see the README for usage information' >&2
		exit 1
	fi

	export FEEDGROUP="${feeds%.feeds}"

	# Implements selective feedgroup updates:
	if [ "$*" ]; then
		skip=1
		for arg; do
			if [ "$arg" = "$FEEDGROUP" ]; then
				skip=; break;
			fi
		done
		if [ "$skip" ]; then continue; fi
	fi

	rc="./${FEEDGROUP}rc"
	statedir="./${FEEDGROUP}.state"
	mkdir -p "$statedir"

	if [ "$V" ]; then
		echo Working on feedgroup "$FEEDGROUP" ... >&2
	fi

	while read -r feed FEEDNAME; do
		[ "$feed" ] || continue # Skip empty lines
		export FEEDNAME

		# XXX: md5sum (although portable enough) isn't POSIX. Could be
		# replaced by substituting / for \ in the feed URL. Would break
		# all existing sakra setups though :/
		md5=$(md5sum) <<-EOF
			$feed
		EOF
		state="$statedir/${md5%% *}"
		: >> "$state"

		if [ "$VV" ]; then
			echo Working on feed "$feed" ... >&2
		fi

		{ curl -LSsf${VVV:+v} -- "$feed" | sfeed | handle_feed "$state" "$rc"; } || :
	done < "$feeds"
done

